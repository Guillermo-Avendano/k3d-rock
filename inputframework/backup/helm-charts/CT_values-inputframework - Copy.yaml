# Default values for mobiusview.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#replicaCount is the number of replicas required for this service
replicaCount: 1
#namespace is the place for the service to run
namespace: mobius-ct

image:
  repository: 524774250312.dkr.ecr.eu-central-1.amazonaws.com/raitt-tef-dm-test-ecr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: inputframework2.1

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 0

service:
  type: ClusterIP
  port: 8080
  name: "inputframework-entrypoint"

networkPolicy:
  name: "inputframework-netpol"
  enabled: true

ports:
  - name: inputframework
    protocol: TCP
    port: 8080
    targetPort: 8080

initRepository:
  NOINIT: ""
  IPADMIN: "SYSADMIN"
  IPADMINPASS: "ASG"

ingress:
  name: "inputframework-ingress"
  hostname: dm-mobius-ct.high.raitcs01-test.aws.de.pri.o2.com
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    inputframeworkport: 8080
  tls:
   - secretName: mobius-tls-secret
   - hosts:
     - dm-mobius-ct.high.raitcs01-test.aws.de.pri.o2.com

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     memory: 4Gi
   requests:
     cpu: 2
     memory: 4Gi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
