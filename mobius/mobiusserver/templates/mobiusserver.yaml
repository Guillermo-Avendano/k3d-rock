# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#replicaCount is the number of replicas required for this service
replicaCount: 1
#namespace is the place for the service to run
namespace: <NAMESPACE>
image:
  # Placeholders will replaced in runtime based on .env file
  repository: <KUBE_LOCALREGISTRY_HOST>:<KUBE_LOCALREGISTRY_PORT>/<IMAGE_NAME_MOBIUS>
  tag: <IMAGE_VERSION_MOBIUS>
  pullPolicy: IfNotPresent
  
mobius:
  admin:
    #Adding a group to the document server to be accessed from. Accepts comma separated values
    group: "mobiusadmin"
    user: "admin"
  rds:
    #provider is the DBMS System being used. "ORACLE" or "POSTGRESQL".
    provider: "POSTGRESQL"
    #endpoint is the hostname of the RDS Database
    endpoint: "<POSTGRESQL_HOST>"
    #port is the port used by the Database
    port: "<POSTGRESQL_PORT>"
    #credentials
    # Placeholders will replaced in runtime based on .env file
    user: "<POSTGRESQL_USERNAME>"
    password: "<POSTGRESQL_PASSWORD>"
    schema: "<POSTGRESQL_DBNAME_MOBIUS>"
    
    initOrUpgrade: "YES"
  
  storageClassName: "local-path"

  persistentVolume:
    enabled: true
    claimName: "mobius-storage-claim"
    
  mobiusDiagnostics:
    persistentVolume:
      #enabled is the flag to indicate whether persistence claim for mobius diagnostics report is required or not
      #By setting the value as false, application logs will be lost when the pod is removed
      enabled: true
      # persistent volume claim name for mobius diagnostics report
      claimName: "mobius-diagnose-claim"
      
  createDocumentServer: "YES"
  
  isSaas: "NO"
    
  fts:
    #enabled set to yes to turn on full text search
    enabled: "YES"
      
    persistentVolume:
      enabled: false
      claimName: "mobius-fts-pv-claim"

      #Uncomment to enable elasticsearch for FTS      
    engineType: "elasticsearch"
    serverProtocol: "HTTP"
    host: <ELASTICSEARCH_HOST>
    port: <ELASTICSEARCH_PORT>

    indexName: "mobius12"

            
  #Uncomment to enable topic export to eventanalytics
  
  topic:
    export:
      url: jdbc:postgresql://<POSTGRESQL_HOST>:<POSTGRESQL_PORT>/<POSTGRESQL_DBNAME_EVENTANALYTICS>
      user: <POSTGRESQL_USERNAME>
      password: <POSTGRESQL_PASSWORD>
      driver: org.postgresql.Driver

service:
  #name is the name of the port
  type: ClusterIP
  #name is the name of the port
  port: 8080

spring:
  #Enable Kafka section to enable auditing to kafka. Configure the topic
  # in audit.kafka section  
  kafka:
    bootstrap:
      servers: <KAFKA_BOOTSTRAP_URL>
    security:
      protocol: PLAINTEXT
    producer:
      acks: all
      properties:
        enable:
          idempotence: true  

asg:
  audit:
    kafka:
      topic: audit
    fileSettings:
      storagePathName: /mnt/efs
      outputFileName: AuditServiceOutput.csv
  security:
    #openidConnectTwo:
      #serviceTokenSettings:
        #internalConfig:
          #privateKey: 
          #publicKey: 
  database:
    automatic-schema-update: "false"
  printagent:
    type: restserver    

  metrics:
    type: embedded
    tracker:
      enabled: false
      cacheTime: 60000
      databaseTime: 120000
    scheduler:
      enabled: false
      jobTime: 180000
      
printagent:
  enabled: false
  